# ============================================================================
# n8n Production Environment Configuration
# ============================================================================
# Copy this file to .env and update all values marked with CHANGE_ME
#
# SECURITY WARNING: This file contains sensitive information.
# Make sure to:
# 1. Never commit .env to version control
# 2. Use strong, unique passwords for all services
# 3. Regularly rotate secrets and passwords
# ============================================================================

# ============================================================================
# DOMAIN CONFIGURATION
# ============================================================================
# Your domain name (REQUIRED - update this!)
N8N_HOST=your-domain.com

# Timezone for the application
TIMEZONE=UTC

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================
# PostgreSQL credentials (CHANGE ALL OF THESE!)
POSTGRES_USER=n8n_user
POSTGRES_PASSWORD=CHANGE_ME_SUPER_STRONG_DB_PASSWORD_32_CHARS_MIN
POSTGRES_DB=n8n_production

# ============================================================================
# REDIS CONFIGURATION
# ============================================================================
# Redis password for queue management (CHANGE THIS!)
REDIS_PASSWORD=CHANGE_ME_STRONG_REDIS_PASSWORD_24_CHARS_MIN

# ============================================================================
# n8n SECURITY CONFIGURATION
# ============================================================================
# Basic authentication (REQUIRED for production!)
N8N_BASIC_AUTH_ACTIVE=true
N8N_BASIC_AUTH_USER=admin
N8N_BASIC_AUTH_PASSWORD=CHANGE_ME_STRONG_ADMIN_PASSWORD_16_CHARS_MIN

# Encryption key for sensitive data (REQUIRED - generate a random 32-character string!)
# You can generate one with: openssl rand -hex 32
N8N_ENCRYPTION_KEY=CHANGE_ME_RANDOM_32_CHARACTER_ENCRYPTION_KEY

# JWT secret for user management (REQUIRED - generate a random string!)
# You can generate one with: openssl rand -base64 32
N8N_JWT_SECRET=CHANGE_ME_RANDOM_JWT_SECRET_FOR_USER_SESSIONS

# ============================================================================
# n8n PERFORMANCE & LIMITS
# ============================================================================
# Logging level (error, warn, info, debug)
N8N_LOG_LEVEL=warn

# Maximum payload size (in MB)
N8N_PAYLOAD_MAX_SIZE=16

# ============================================================================
# BACKUP CONFIGURATION
# ============================================================================
# Backup retention (days)
BACKUP_RETENTION_DAYS=7

# Backup schedule (if using cron)
BACKUP_SCHEDULE=0 2 * * *

# ============================================================================
# MONITORING & ALERTING (Optional)
# ============================================================================
# Webhook URL for backup notifications (optional)
# BACKUP_WEBHOOK_URL=https://your-monitoring-service.com/webhook

# Email settings for alerts (optional)
# SMTP_HOST=smtp.your-provider.com
# SMTP_PORT=587
# SMTP_USER=your-email@domain.com
# SMTP_PASSWORD=your-email-password
# ALERT_EMAIL=admin@your-domain.com

# ============================================================================
# SECURITY NOTES
# ============================================================================
#
# 1. STRONG PASSWORDS:
#    - Use at least 16 characters for passwords
#    - Include uppercase, lowercase, numbers, and symbols
#    - Never reuse passwords from other systems
#
# 2. ENCRYPTION KEYS:
#    - Generate random keys using: openssl rand -hex 32
#    - Store keys securely and never share them
#    - Backup keys in a secure location
#
# 3. DOMAIN SETUP:
#    - Point your domain A record to your server's IP
#    - Ensure ports 80 and 443 are open in your firewall
#    - Caddy will automatically obtain SSL certificates
#
# 4. REGULAR MAINTENANCE:
#    - Monitor backup logs regularly
#    - Update containers monthly: docker-compose pull && docker-compose up -d
#    - Review access logs for suspicious activity
#
# 5. BACKUP STRATEGY:
#    - Database backups run automatically
#    - Copy backups to off-site storage regularly
#    - Test backup restoration process
#
# ============================================================================